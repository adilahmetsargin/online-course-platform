import {
  Button,
  Flex,
  Grid,
  Group,
  Modal,
  Stack,
  TextInput,
} from "@mantine/core";
import { type Course } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import Card from "~/components/card";
import AdminDashboardLayout from "~/components/layouts/admin-dashboard-layout";
import { useDisclosure } from "@mantine/hooks";
import { useForm } from "@mantine/form";
import { api } from "~/utils/api";

const Courses: NextPage = () => {
  const courses = api.course.getCourses.useQuery();

  const createCourseMutation = api.course.createCourse.useMutation();

  const [
    isCreateModalOpen,
    { open: openCreateCourseModal, close: closeCreateCourseModal },
  ] = useDisclosure(false);

  const createCourseForm = useForm({
    initialValues: {
      title: "",
      description: "",
    },
  });

  return (
    <>
      <Head>
        <title>Manage Courses</title>
        <meta name="description" content="Generated by sargin" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Modal
        opened={isCreateModalOpen}
        onClose={closeCreateCourseModal}
        title="Create Course"
      >
        <form
          onSubmit={createCourseForm.onSubmit(async (values) => {
            await createCourseMutation.mutateAsync(values);
            closeCreateCourseModal();
            createCourseForm.reset();
            await courses.refetch();
          })}
        >
          <Stack>
            <TextInput
              required
              withAsterisk
              label="Title"
              placeholder="Awesome X Course"
              {...createCourseForm.getInputProps("title")}
            />
            <TextInput
              withAsterisk
              required
              label="Description"
              placeholder="What is about your course ?"
              {...createCourseForm.getInputProps("description")}
            />
          </Stack>

          <Group position="right" mt="md">
            <Button type="submit">Create</Button>
          </Group>
        </form>
      </Modal>
      <main>
        <AdminDashboardLayout>
          <Flex justify="space-between" direction="row" align="center">
            <h1>Manage Courses</h1>
            <Button onClick={openCreateCourseModal}>Create New Course</Button>
          </Flex>

          <Grid>
            {courses.data?.map((course) => (
              <Grid.Col key={course.id} span={4}>
                <Card course={course} />
              </Grid.Col>
            ))}
          </Grid>
        </AdminDashboardLayout>
      </main>
    </>
  );
};

export default Courses;
